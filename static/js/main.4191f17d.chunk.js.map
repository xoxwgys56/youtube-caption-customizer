{"version":3,"sources":["components/Title.js","components/video/Video.js","components/caption/CaptionItem.js","components/util/Msg.js","components/caption/CaptionSelector.js","components/caption/CaptionConfig.js","components/caption/CaptionContainer.js","components/video/VideoSearch.js","components/user/Auth.js","components/user/UserContainer.js","components/video/VideoContainer.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Title","props","className","title","NoVideo","Video","video","onReady","onPlay","onPause","onEnd","videoId","id","opts","playerVars","autoplay","controls","fs","modestbranding","rel","CaptionItem","setFontConfig","bind","getPrimaryStyle","getSideStyle","config","this","baseCaption","current","fontSize","baseSize","fontUnit","otherSize","baseCaptionStyle","style","afterCaptionStyle","prevCaptionStyle","afterCaption","prevCaption","color","fontWeight","weight","fontStyle","bunch","captions","i","length","primary","text","caption","push","map","item","Component","Caption","ErrorMsg","msg","WarningMsg","InfoMsg","CaptionSelector","state","language","onChangeSelect","e","preventDefault","target","value","options","selectedIndex","innerText","setState","languageList","onChange","key","label","CaptionConfig","maxFontSize","checkSideCaption","onClickPopup","onClickBackgroundOff","onClickApply","handleChangeComplete","onChangeSlider","onChangeStyle","onChangeWeight","onChangeCheckbox","popupBackground","React","createRef","popupContent","testRef","classList","add","remove","hex","testRefStyle","textTransform","FontWeight","size","checked","onClick","icon","faCogs","ref","faTimes","type","min","max","onChangeComplete","sizeLabel","CaptionContainer","time","errorMsg","warningMsg","infoMsg","currentLanguage","container","getCaptionList","getCaptions","setVideoTime","getCaptionIndexByTime","getBunchOfCaption","onChangeConfig","resetCaption","handleCaption","console","log","setTimeout","window","gapi","client","youtube","list","part","then","rep","items","result","captionList","forEach","snippet","catch","err","setError","captionId","download","tfmt","decode","decodeURIComponent","escape","body","parse","start","end","indexes","emptyItem","index","least","selector","player","isSignIn","VideoSearch","onSubmit","input","document","getElementById","handleSubmit","isSignin","SearchForm","inputRef","Cookies","get","placeholder","children","SearchButton","faSearch","auth","apiKey","discoveryDocs","clientId","scope","UserContainer","user","signinBtn","onClickSignin","onSignOut","updateSigninStatus","onGapiLoad","script","createElement","setAttribute","src","appendChild","that","load","init","auth2","getAuthInstance","isSignedIn","listen","profile","currentUser","getBasicProfile","getId","name","getName","imgUrl","getImageUrl","handleAuth","signIn","signOut","userSignin","faSignOutAlt","error","faSignInAlt","VideoContainer","validateVideoLink","link","undefined","match","loading","setTimer","offTimer","set","temp","split","includes","lastTime","setWarning","eventArr","isMobile","seekTo","pauseVideo","timerId","clearInterval","setInterval","getVideoTime","getCurrentTime","warning","info","signinUser","signoutUser","Footer","href","faCode","App","Boolean","location","hostname","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.4191f17d.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = (props) => {\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        {/* <div className=\"row\">night & day</div> */}\n        <div className=\"row\">\n          <h4 className=\"app-title\">{props.title}</h4>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Title;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Youtube from 'react-youtube';\n\nconst Video = (props) => {\n  const { video, onReady, onPlay, onPause, onEnd } = props;\n\n  if (!video) {\n    return <NoVideo />;\n  }\n\n  const option = {\n    playerVars: {\n      autoplay: 0,\n      controls: 1,\n      fs: 0,\n      modestbranding: 1,\n      rel: 0,\n    },\n  };\n\n  return (\n    <div className=\"youtube\">\n      <Youtube\n        videoId={video.id}\n        opts={option}\n        onReady={onReady}\n        onPlay={onPlay}\n        onPause={onPause}\n        onEnd={onEnd}\n      />\n    </div>\n  );\n};\n\nVideo.propTypes = {\n  // id: PropTypes.string.isRequired,\n  video: PropTypes.object,\n};\n\nconst NoVideo = () => {\n  return (\n    <div className=\"no-video\">\n      no video, input link\n      <div className=\"no-video\"></div>\n      {/* <iframe></iframe> */}\n    </div>\n  );\n};\n\n// const LoadingVideo = () => {\n//   return <div className=\"loading-video\">loading video</div>;\n// };\n\nexport default Video;\n","import React, { Component } from 'react';\n\nclass CaptionItem extends Component {\n  constructor(props) {\n    super(props);\n    this.setFontConfig = this.setFontConfig.bind(this);\n    this.getPrimaryStyle = this.getPrimaryStyle.bind(this);\n    this.getSideStyle = this.getSideStyle.bind(this);\n  }\n\n  setFontConfig() {\n    const config = this.props.config;\n\n    if (!config) return;\n    // if there is no caption, return\n    if (!this.baseCaption.current) return;\n    // set font size\n    const fontSize = config.fontSize;\n    const baseSize = fontSize + config.fontUnit;\n    const otherSize = fontSize * 0.5 + config.fontUnit;\n    // set caption item configuration\n    const baseCaptionStyle = this.baseCaption.current.style;\n\n    let afterCaptionStyle = null,\n      prevCaptionStyle = null;\n    if (this.afterCaption.current)\n      afterCaptionStyle = this.afterCaption.current.style;\n    if (this.prevCaption.current)\n      prevCaptionStyle = this.prevCaption.current.style;\n    // base main caption\n    baseCaptionStyle.fontSize = baseSize;\n    baseCaptionStyle.color = config.color;\n    baseCaptionStyle.fontWeight = config.weight;\n    baseCaptionStyle.fontStyle = config.style;\n    // other side caption\n    if (afterCaptionStyle) {\n      afterCaptionStyle.fontSize = otherSize;\n      afterCaptionStyle.color = config.color;\n      afterCaptionStyle.fontWeight = config.weight;\n      afterCaptionStyle.fontStyle = config.style;\n    }\n    if (prevCaptionStyle) {\n      prevCaptionStyle.fontSize = otherSize;\n      prevCaptionStyle.color = config.color;\n      prevCaptionStyle.fontWeight = config.weight;\n      prevCaptionStyle.fontStyle = config.style;\n    }\n  }\n\n  getPrimaryStyle() {\n    const {\n      fontSize,\n      color,\n      fontWeight,\n      fontStyle,\n      fontUnit,\n    } = this.props.config;\n    const style = {\n      fontSize: fontSize + fontUnit,\n      color: color,\n      fontWeight: fontWeight,\n      fontStyle: fontStyle,\n    };\n    return style;\n  }\n\n  getSideStyle() {\n    const {\n      fontSize,\n      color,\n      fontWeight,\n      fontStyle,\n      fontUnit,\n    } = this.props.config;\n    const style = {\n      fontSize: fontSize * 0.5 + fontUnit,\n      color: color,\n      fontWeight: fontWeight,\n      fontStyle: fontStyle,\n    };\n    return style;\n  }\n\n  render() {\n    const { bunch } = this.props;\n\n    this.setFontConfig();\n    // console.log(bunch);\n    // no caption that time\n    if (!bunch) return <div>load caption...</div>;\n\n    const captions = [];\n    for (let i = 0; i < bunch.length; i++) {\n      const primary = bunch.primary;\n      const text = bunch[i].caption.text;\n\n      if (primary) {\n        captions.push(<Caption text={text} style={this.getPrimaryStyle} />);\n      } else {\n        captions.push(<Caption text={text} style={this.getSideStyle} />);\n      }\n    }\n\n    return <div className=\"caption-item\">{captions.map((item) => item)}</div>;\n\n    // switch (bunch.length) {\n    //   case 1:\n    //     return (\n    //       <div className=\"caption-item\">\n    //         <h5 ref={this.baseCaption}>{bunch[0].text}</h5>\n    //       </div>\n    //     );\n    //   case 2:\n    //     return (\n    //       <div className=\"caption-item\">\n    //         <h5 ref={this.baseCaption}>{bunch[0].text}</h5>\n    //         <h6 ref={this.afterCaption}>{bunch[1].text}</h6>\n    //       </div>\n    //     );\n    //   case 3:\n    //     return (\n    //       <div className=\"caption-item\">\n    //         <h6 ref={this.prevCaption}>{bunch[0].text}</h6>\n    //         <h5 ref={this.baseCaption}>{bunch[1].text}</h5>\n    //         <h6 ref={this.afterCaption}>{bunch[2].text}</h6>\n    //       </div>\n    //     );\n    //   default:\n    //     return <div className=\"caption-item\">...</div>;\n    // }\n  }\n}\n\nCaptionItem.propTypes = {\n  // text: PropTypes.string.isRequired,\n};\n\nconst Caption = (props) => {\n  const { text, style } = props;\n\n  return <p style={style}>{text}</p>;\n};\n\nexport default CaptionItem;\n","import React from 'react';\n\nexport const ErrorMsg = (props) => {\n  const { msg } = props;\n  // throw msg;\n  return (\n    <div className=\"row\">\n      <div className=\"twelve columns error-msg\">\n        <h5>ERROR: {msg}</h5>\n        <p>more detail. check the development tab.</p>\n      </div>\n    </div>\n  );\n};\n\nexport const WarningMsg = (props) => {\n  const { msg } = props;\n  // console.log('warning message : ', msg);\n  return (\n    <div className=\"row\">\n      <div className=\"twelve columns warning-msg\">\n        <h5>WARNING: {msg}</h5>\n        <p>more detail. check the development tab.</p>\n      </div>\n    </div>\n  );\n};\n\nexport const InfoMsg = (props) => {\n  const { msg } = props;\n  // console.log('info message : ', msg);\n  return (\n    <div className=\"row\">\n      <div className=\"twelve columns warning-msg\">\n        <h5>INFO: {msg}</h5>\n      </div>\n    </div>\n  );\n};\n","import React, { Component } from 'react';\n\nexport class CaptionSelector extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      language: '',\n    };\n\n    this.onChangeSelect = this.onChangeSelect.bind(this);\n  }\n\n  onChangeSelect(e) {\n    e.preventDefault();\n    const id = e.target.value;\n    const language = e.target.options[e.target.selectedIndex].innerText;\n    this.props.onChangeSelect(id);\n    this.setState({ language: language });\n  }\n\n  render() {\n    const { languageList, msg } = this.props;\n\n    if (msg) {\n      return <div className=\"one column\">{msg}</div>;\n    }\n\n    // do not use this.\n    // let language;\n    // if (this.state.language)\n    //   language = (\n    //     <span className=\"caption-language\">{this.state.language}</span>\n    //   );\n\n    return (\n      <div className=\"u-full-width\">\n        <select onChange={this.onChangeSelect}>\n          <option value=\"\">select language</option>\n          {languageList.map((caption, i) => (\n            <option value={caption.id} key={i} label={caption.language}>\n              {caption.language}\n            </option>\n          ))}\n        </select>\n        {/* <span className=\"\">{language}</span> */}\n      </div>\n    );\n  }\n}\n\nexport default CaptionSelector;\n","import React, { Component } from 'react';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCogs, faTimes } from '@fortawesome/free-solid-svg-icons';\nimport { SliderPicker } from 'react-color';\n\nexport default class CaptionConfig extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      color: '#000',\n      fontSize: 2,\n      weight: 400,\n      style: 'none',\n      fontUnit: 'em',\n      maxFontSize: 3,\n      checkSideCaption: true,\n    };\n\n    this.onClickPopup = this.onClickPopup.bind(this);\n    this.onClickBackgroundOff = this.onClickBackgroundOff.bind(this);\n    this.onClickApply = this.onClickApply.bind(this);\n    this.handleChangeComplete = this.handleChangeComplete.bind(this);\n    this.onChangeSlider = this.onChangeSlider.bind(this);\n    this.onChangeStyle = this.onChangeStyle.bind(this);\n    this.onChangeWeight = this.onChangeWeight.bind(this);\n    this.onChangeCheckbox = this.onChangeCheckbox.bind(this);\n    this.popupBackground = React.createRef();\n    this.popupContent = React.createRef();\n    this.testRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.props.onChange(this.state);\n  }\n\n  onClickPopup(e) {\n    // const root = document.getElementById('root').classList.add('root-blur');\n    this.popupBackground.current.classList.add('caption-visible');\n    this.popupContent.current.classList.add('caption-visible');\n  }\n\n  // when user click background\n  onClickBackgroundOff(e) {\n    this.popupBackground.current.classList.remove('caption-visible');\n    this.popupContent.current.classList.remove('caption-visible');\n  }\n\n  onClickApply(e) {\n    this.onClickBackgroundOff(e);\n\n    // apply configuration\n    this.props.onChange(this.state);\n  }\n\n  handleChangeComplete(e) {\n    const hex = e.hex;\n    this.setState({ color: hex });\n    const testRefStyle = this.testRef.current.style;\n    testRefStyle.color = hex;\n    // if change it once\n    testRefStyle.textTransform = 'uppercase';\n    testRefStyle.FontWeight = '800';\n  }\n\n  onChangeSlider(e) {\n    const size = this.state.maxFontSize * (e.target.value / 10);\n    const unit = 'em';\n    this.setState({ fontSize: size });\n    this.setState({ fontUnit: unit });\n\n    this.testRef.current.style.fontSize = size + unit;\n  }\n\n  onChangeWeight(e) {\n    const weight = e.target.value;\n    this.setState({ weight: weight });\n  }\n\n  onChangeStyle(e) {\n    const style = e.target.value;\n    this.setState({ style: style });\n  }\n\n  onChangeCheckbox(e) {\n    const value = e.target.checked;\n    this.setState({ checkSideCaption: value });\n  }\n\n  render() {\n    const weight = [100, 200, 300, 400, 500, 600, 700, 800, 900];\n\n    return (\n      <div className=\"u-full-width caption-config\">\n        {/* button */}\n        <button className=\"u-pull-right\" onClick={this.onClickPopup}>\n          <FontAwesomeIcon icon={faCogs} />\n        </button>\n        {/* after button clicked */}\n        {/* background cover */}\n        <div\n          ref={this.popupBackground}\n          className=\"caption-config-popup caption-invisible\"\n          onClick={this.onClickBackgroundOff}\n        ></div>\n        {/* popup */}\n        <div\n          ref={this.popupContent}\n          className=\"caption-config-popup-content caption-invisible\"\n        >\n          {/* title */}\n          <div className=\"caption-config-popup-title row u-full-width\">\n            configuration\n          </div>\n          {/* exit button */}\n          <div className=\" u-pull-right\">\n            <span\n              onClick={this.onClickBackgroundOff}\n              className=\"caption-config-popup-exit\"\n            >\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          </div>\n          {/* font size row */}\n          <div className=\"row caption-config-popup-row\">\n            <div className=\"four columns\">size</div>\n            <div className=\"eight columns\">\n              <input\n                className=\"u-full-width caption-config-popup-slider\"\n                type=\"range\"\n                min=\"1\"\n                max=\"10\"\n                onChange={this.onChangeSlider}\n              />\n            </div>\n          </div>\n          {/* color select row */}\n          <div className=\"row caption-config-popup-row\">\n            <div className=\"four columns\">color</div>\n            <div className=\"eight columns\">\n              <SliderPicker\n                color={this.state.color}\n                onChangeComplete={this.handleChangeComplete}\n              />\n            </div>\n          </div>\n          {/* font weight and italic style row */}\n          <div className=\"row caption-config-popup-row\">\n            <div className=\"four columns\">weight</div>\n            <div className=\"four columns\">\n              <select className=\"u-full-width\" onChange={this.onChangeWeight}>\n                {weight.map((item, i) => (\n                  <option value={item} key={i}>\n                    {item}\n                  </option>\n                ))}\n              </select>\n            </div>\n            <div className=\"four columns\">\n              <select onChange={this.onChangeStyle}>\n                <option value=\"normal\">normal</option>\n                <option value=\"italic\">italic</option>\n                <option value=\"oblique\">oblique</option>\n              </select>\n            </div>\n          </div>\n          {/* side caption */}\n          <div className=\"row caption-config-popup-row\">\n            <div className=\"four columns\">side caption</div>\n            <div className=\"eight columns\">\n              <input\n                type=\"checkbox\"\n                onChange={this.onChangeCheckbox}\n                checked={this.state.checkSideCaption}\n              />\n            </div>\n          </div>\n          {/* config preview */}\n          <div\n            className=\"row u-full-width caption-config-result\"\n            ref={this.testRef}\n          >\n            test by test\n          </div>\n\n          {/* apply row */}\n          <div\n            className=\"row u-full-width caption-config-apply\"\n            onClick={this.onClickApply}\n            ref={this.sizeLabel}\n          >\n            apply\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { parse } from 'subtitle';\nimport CaptionItem from './CaptionItem';\nimport { ErrorMsg, WarningMsg, InfoMsg } from '../util/Msg';\n\n// import srtFile from './kor.srt';\nimport CaptionSelector from './CaptionSelector';\nimport CaptionConfig from './CaptionConfig';\n\nclass CaptionContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: '',\n      caption: null,\n      languageList: [],\n      time: 0,\n      errorMsg: '',\n      warningMsg: '',\n      infoMsg: '',\n      currentLanguage: '',\n      config: null,\n    };\n\n    // test caption if exceed limitation.\n    // fetch(srtFile)\n    //   .then((rep) => rep.text())\n    //   .then((data) => {\n    //     // const encode = unescape(encodeURIComponent(data));\n    //     // console.log(encode);\n    //     const decode = decodeURIComponent(escape(data));\n    //     const srt = parse(decode);\n\n    //     // whatever, it is works...\n    //     this.setState({ caption: srt });\n    //   })\n    //   .catch((err) => console.log(err));\n\n    this.container = React.createRef();\n\n    this.getCaptionList = this.getCaptionList.bind(this);\n    this.onChangeSelect = this.onChangeSelect.bind(this);\n    this.getCaptions = this.getCaptions.bind(this);\n    this.setVideoTime = this.setVideoTime.bind(this);\n    this.getCaptionIndexByTime = this.getCaptionIndexByTime.bind(this);\n    this.getBunchOfCaption = this.getBunchOfCaption.bind(this);\n    this.onChangeConfig = this.onChangeConfig.bind(this);\n    this.resetCaption = this.resetCaption.bind(this);\n  }\n\n  componentDidMount() {\n    // console.log(this.container.current);\n    const e = [];\n    e.push(this.getCaptionList);\n    e.push(this.setVideoTime);\n    e.push(this.resetCaption);\n    this.props.handleCaption(e);\n  }\n\n  resetCaption() {\n    this.setState({\n      caption: null,\n      languageList: [],\n    });\n  }\n\n  // 추후에 메세지 타입 만들어서 이용하거나, component 분리하면 더 좋겠다.\n  // 경고 메세지.\n  setWarning(msg) {\n    const timeOut = 6000;\n    this.setState({ warningMsg: msg });\n    console.log('warning message : ', msg);\n    setTimeout(() => {\n      this.setState({ warningMsg: '' });\n    }, timeOut);\n  }\n  // 에러 메세지\n  setError(msg) {\n    const timeOut = 6000;\n    this.setState({ errorMsg: msg });\n    console.log('error message : ', msg);\n    setTimeout(() => {\n      this.setState({ errorMsg: '' });\n    }, timeOut);\n  }\n  // 정보 메세지\n  setInfo(msg) {\n    const timeOut = 10000;\n    this.setState({ infoMsg: msg });\n    console.log(msg);\n    setTimeout(() => {\n      this.setState({ infoMsg: '' });\n    }, timeOut);\n  }\n\n  // get caption language list\n  getCaptionList(videoId) {\n    this.setState({ id: videoId });\n\n    const gapi = window.gapi;\n    // return;\n    gapi.client.youtube.captions\n      .list({\n        part: 'snippet',\n        videoId: videoId,\n      })\n      .then((rep) => {\n        // load caption list\n        const items = rep.result.items;\n        const captionList = [];\n        items.forEach((item) => {\n          const caption = { id: item.id, language: item.snippet.language };\n          captionList.push(caption);\n        });\n        this.setState({ languageList: captionList });\n      })\n      .catch((err) => {\n        this.setError('Sorry, we could not load caption list');\n        throw err;\n      });\n  }\n\n  setVideoTime(time) {\n    this.time = time;\n    this.setState({ time: time });\n  }\n\n  onChangeSelect(id) {\n    if (id) {\n      this.getCaptions(id);\n    }\n  }\n\n  // after user choose caption's language\n  getCaptions(captionId) {\n    // return;\n    const gapi = window.gapi;\n    gapi.client.youtube.captions\n      .download({\n        id: captionId,\n        tfmt: 'srt',\n      })\n      .then((rep) => {\n        const decode = decodeURIComponent(escape(rep.body));\n        const captions = parse(decode);\n        this.setState({ caption: captions });\n        // console.log(captions);\n      })\n      .catch((err) => {\n        this.setError('can not download caption');\n        throw err;\n      });\n  }\n\n  getCaptionIndexByTime() {\n    const time = this.state.time * 1000;\n    const captions = this.state.caption;\n    // this means there is no caption yet.\n    if (captions[0].start > time) return '';\n    // console.log(captions);\n    const result = [];\n    for (let i = 0; i < captions.length; i++) {\n      const caption = captions[i];\n      if (caption.start <= time && caption.end >= time) {\n        result.push(i);\n      }\n      if (caption.start > time) break;\n    }\n    return result;\n  }\n\n  getBunchOfCaption() {\n    const bunch = [];\n\n    // no caption.\n    const captions = this.state.caption;\n    if (!captions) return bunch;\n    const indexes = this.getCaptionIndexByTime();\n    // there is no caption\n    if (indexes.length === 0) return bunch;\n\n    const emptyItem = { start: 0, end: 0, text: '', primary: false };\n\n    let index = indexes[0];\n    // push current caption\n    for (let i = 0; i < indexes.length; i++) {\n      const caption = captions[index++];\n      caption.primary = true;\n      if (caption) bunch.push(caption);\n      // exception of last caption\n      else bunch.push(emptyItem);\n    }\n    if (this.state.config.checkSideCaption) {\n      const least = 3 - bunch.length;\n      for (let i = 0; i < least; i++) {\n        const caption = captions[index++];\n        caption.primary = false;\n        if (caption) bunch.push(caption);\n        // exception of last caption\n        else bunch.push(emptyItem);\n      }\n    }\n    // console.log(bunch);\n    return bunch;\n  }\n\n  onChangeConfig(config) {\n    // console.log(config);\n    this.setState({ config: config });\n  }\n\n  render() {\n    const { player } = this.props;\n\n    // no video\n    if (!player) {\n      return <div className=\"caption-container\">no video loaded</div>;\n    }\n\n    let infoMsg;\n    // not sign in\n    if (!this.props.isSignIn) {\n      infoMsg = <InfoMsg msg={'user not sign in. you need to sign in'} />;\n    }\n    let errorMsg;\n    if (this.state.errorMsg !== '') {\n      errorMsg = <ErrorMsg msg={this.state.errorMsg} />;\n    }\n    let warningMsg;\n    if (this.state.errorMsg !== '') {\n      warningMsg = <WarningMsg msg={this.state.warningMsg} />;\n    }\n\n    // caption language selector\n    let selector;\n    // if (false) {\n    if (!this.state.languageList.length > 0) {\n      selector = <CaptionSelector msg={'loading caption list'} />;\n    } else {\n      selector = (\n        <CaptionSelector\n          onChangeSelect={this.onChangeSelect}\n          languageList={this.state.languageList}\n        />\n      );\n    }\n\n    // caption\n    let caption;\n    if (this.state.caption) {\n      const bunch = this.getBunchOfCaption();\n      caption = (\n        <div className=\"\" ref={this.container}>\n          <CaptionItem bunch={bunch} config={this.state.config} />\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"caption-container\">\n        <div className=\"one-half column\">{selector}</div>\n        <div className=\"one-half column u-pull-left\">\n          <CaptionConfig onChange={this.onChangeConfig} />\n        </div>\n        <div className=\"twelve columns\">\n          <div className=\"row u-max-full-width\">{caption}</div>\n        </div>\n        {errorMsg}\n        {warningMsg}\n        {infoMsg}\n      </div>\n    );\n  }\n}\n\nexport default CaptionContainer;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\nimport Cookies from 'js-cookie';\n\nclass VideoSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSubmit = this.onSubmit.bind(this);\n  }\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    // this input tag is not included this component, so we need find it.\n    const input = document.getElementById('search-input').value;\n    this.props.handleSubmit(input);\n  };\n\n  render() {\n    // not sign in\n    if (!this.props.isSignin) {\n      return (\n        // <div className=\"row\">\n        <SearchForm onSubmit={this.onSubmit} />\n        // </div>\n      );\n      // sign in\n    } else {\n      return (\n        // <div>\n        <SearchForm onSubmit={this.onSubmit}>\n          <SearchButton />\n        </SearchForm>\n        // </div>\n      );\n    }\n  }\n}\n\nVideoSearch.propTypes = {\n  isSignin: PropTypes.bool.isRequired,\n};\n\nclass SearchForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.inputRef = React.createRef();\n  }\n\n  componentDidMount() {\n    // if cookie link exist, insert value\n    if (Cookies.get('link')) {\n      this.inputRef.current.value = Cookies.get('link');\n    }\n  }\n\n  render() {\n    return (\n      <form onSubmit={this.props.onSubmit}>\n        {/* <div className=\"row u-full-width\"> */}\n        <div className=\"ten columns\">\n          <input\n            id=\"search-input\"\n            className=\"search-input\"\n            placeholder=\"youtube link\"\n            type=\"text\"\n            ref={this.inputRef}\n          />\n        </div>\n        {this.props.children}\n        {/* </div> */}\n      </form>\n    );\n  }\n}\n\nconst SearchButton = () => {\n  return (\n    <div className=\"u-pull-right two columns\">\n      <input\n        className=\"u-full-width search-submit-text\"\n        type=\"submit\"\n        value=\"search\"\n      />\n      <button className=\"u-full-width search-submit-icon\" type=\"submit\">\n        <FontAwesomeIcon icon={faSearch} />\n      </button>\n    </div>\n  );\n};\n\nexport default VideoSearch;\n","export const auth = {\n  apiKey: 'AIzaSyB5jjZNk9MshS5CWnNue2WFI9i4-DjabdA',\n  discoveryDocs: [\n    'https://www.googleapis.com/discovery/v1/apis/youtube/v3/rest',\n  ],\n  clientId:\n    '252897927301-5kk706rbo59k9c71au26vm320sn7vl3m.apps.googleusercontent.com',\n  scope: 'https://www.googleapis.com/auth/youtubepartner',\n};\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { auth } from './Auth';\nimport { ErrorMsg } from '../util/Msg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSignInAlt, faSignOutAlt } from '@fortawesome/free-solid-svg-icons';\n\nexport default class UserContainer extends Component {\n  static propTypes = {\n    // prop: PropTypes,\n    handleAuth: PropTypes.func,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      user: null,\n      errorMsg: '',\n      gapi: null,\n    };\n\n    this.signinBtn = React.createRef();\n    this.onClickSignin = this.onClickSignin.bind(this);\n    this.onSignOut = this.onSignOut.bind(this);\n\n    this.updateSigninStatus = this.updateSigninStatus.bind(this);\n    this.onGapiLoad = this.onGapiLoad.bind(this);\n    this.setError = this.setError.bind(this);\n  }\n\n  // check user already sign in or not\n  componentDidMount() {\n    const script = document.createElement('script');\n\n    script.setAttribute('defer', 'defer');\n    script.setAttribute('async', 'async');\n    script.src = 'https://apis.google.com/js/api.js?onload=onGapiLoad';\n    window.onGapiLoad = this.onGapiLoad;\n    document.body.appendChild(script);\n  }\n\n  // when app mounted, get gpai.\n  onGapiLoad() {\n    const gapi = window.gapi;\n    // set gapi as state.\n    this.setState({ gapi: gapi });\n    const that = this;\n    gapi.load('client:auth2', function () {\n      gapi.client\n        .init(auth)\n        .then(() => {\n          gapi.auth2\n            .getAuthInstance()\n            .isSignedIn.listen(that.updateSigninStatus);\n\n          that.updateSigninStatus(\n            gapi.auth2.getAuthInstance().isSignedIn.get()\n          );\n        })\n        .catch((err) => console.log(err));\n    });\n  }\n\n  // call back function when user sign in and out\n  updateSigninStatus(isSignedIn) {\n    if (isSignedIn) {\n      const profile = this.state.gapi.auth2\n        .getAuthInstance()\n        .currentUser.get()\n        .getBasicProfile();\n      this.setState({\n        user: {\n          id: profile.getId(),\n          name: profile.getName(),\n          imgUrl: profile.getImageUrl(),\n        },\n      });\n    } else {\n      this.setState({ user: null });\n    }\n    // update VideoContainer\n    this.props.handleAuth(isSignedIn);\n  }\n\n  // sign in click listener\n  onClickSignin(e) {\n    this.state.gapi.auth2\n      .getAuthInstance()\n      .signIn()\n      .catch((err) => this.setError('Failed sign in. please try again.'));\n  }\n\n  onSignOut(e) {\n    const auth2 = this.state.gapi.auth2.getAuthInstance();\n    auth2.signOut().then(() => {\n      console.log('user sign out');\n    });\n  }\n\n  // 경고 메세지.\n  setError(msg) {\n    const timeOut = 6000;\n    this.setState({ errorMsg: msg });\n    console.log(msg);\n    setTimeout(() => {\n      this.setState({ errorMsg: '' });\n    }, timeOut);\n  }\n\n  render() {\n    let userSignin;\n    // user signed in\n    if (!this.state.user) {\n      let error = '';\n      if (this.state.errorMsg !== '')\n        error = <ErrorMsg msg={this.state.errorMsg} />;\n      // if not sign in, this element include parent component's row\n      // in this state, there is no search button\n      /**\n       * 로그인한 상태가 아니라면, 이 요소는 부모(VideoSearch)의 row에 속하기 때문에 column을 사용한다.\n       */\n      userSignin = (\n        <Fragment>\n          {error}\n          <button\n            className=\"sign-in-btn two columns\"\n            onClick={this.onClickSignin}\n            ref={this.signinBtn}\n          >\n            <FontAwesomeIcon icon={faSignInAlt} />\n          </button>\n        </Fragment>\n      );\n    }\n    // sign in, this element seperated from parent component's row\n    else {\n      userSignin = (\n        <Fragment>\n          <div className=\"two columns user-img\">\n            <img className=\"user-img\" src={this.state.user.imgUrl} />\n          </div>\n          <h5 className=\"five columns u-full-width\">\n            Hello {this.state.user.name}\n          </h5>\n          <button\n            className=\"sign-out-btn two columns u-pull-right\"\n            onClick={this.onSignOut}\n          >\n            <FontAwesomeIcon icon={faSignOutAlt} />\n          </button>\n        </Fragment>\n      );\n    }\n\n    return <Fragment>{userSignin}</Fragment>;\n  }\n}\n","import React, { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport { isMobile } from 'react-device-detect';\n\nimport Video from './Video';\nimport CaptionContainer from '../caption/CaptionContainer';\nimport VideoSearch from './VideoSearch';\nimport UserContainer from '../user/UserContainer';\nimport { WarningMsg, ErrorMsg, InfoMsg } from '../util/Msg';\n\nclass VideoContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      video: null,\n      player: null,\n      loading: true,\n      isSignin: false,\n      warningMsg: '',\n      errorMsg: '',\n      infoMsg: '',\n    };\n\n    // this.validateVideoLink = this.validateVideoLink.bind(this);\n    this.handleAuth = this.handleAuth.bind(this);\n    this.handleCaption = this.handleCaption.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.onReady = this.onReady.bind(this);\n    this.onPlay = this.onPlay.bind(this);\n    this.onPause = this.onPause.bind(this);\n    this.setTimer = this.setTimer.bind(this);\n    this.onEnd = this.onEnd.bind(this);\n    this.offTimer = this.offTimer.bind(this);\n  }\n\n  componentDidMount() {\n    // check cookie.\n    // 쿠키 확인\n    const link = Cookies.get('link');\n    if (link) {\n      this.setState({ link: link });\n    }\n  }\n\n  // check link is valid\n  // 올바른 유튜브 링크인지 확인.\n  validateVideoLink = (link) => {\n    if (link !== undefined || link !== '') {\n      var regExp = /^.*(youtu.be\\/|v\\/|u\\/\\w\\/|embed\\/|watch\\?v=|\\&v=|\\?v=)([^#\\&\\?]*).*/;\n      var match = link.match(regExp);\n      if (match && match[2].length === 11) {\n        return true;\n      } else return false;\n    }\n  };\n\n  // get link from VideoSearch\n  // VideoSearch로부터 링크를 얻고 올바른 링크라면, 스테이트에 저장.\n  handleSubmit(link) {\n    this.offTimer();\n    Cookies.set('link', link);\n\n    // reset caption selector\n    this.resetCaption();\n\n    if (this.validateVideoLink(link)) {\n      let temp = link.split('?v=')[1];\n      if (!temp) {\n        temp = link.split('&v=')[1];\n      }\n      const timeDel = '&t=';\n      let video;\n      // if link include time\n      if (temp.includes(timeDel)) {\n        const result = temp.split(timeDel);\n        const id = result[0];\n        const time = result[1].split('s')[0];\n        video = {\n          id: id,\n          link: link,\n          lastTime: time,\n        };\n        this.setState({\n          video: video,\n        });\n        this.setTimer();\n      } else {\n        // no time\n        const id = temp.split('&')[0];\n        video = {\n          id: id,\n          link: link,\n        };\n        this.setState({\n          video: video,\n        });\n      }\n      // input link with signin, get caption list\n      // 로그인한 상태에서 입력을 했다면 바로 자막 리스트를 가져온다.\n      if (this.state.isSignin) {\n        // setState is asynchronous, so we use temporary video. but value is same.\n        // setState함수는 비동기적이라서, 변수로 저장된 video를 사용한다.\n        this.getCaptionList(video.id);\n      }\n    } else {\n      // not a valid link\n      const msg = link + ' is not a valid youtube link.';\n      this.setWarning(msg);\n    }\n  }\n\n  // called only user sign-in or sign-out\n  // 유저 로그인,아웃에만 호출된다.\n  handleAuth(isSignedIn) {\n    // if sign in, get caption\n    if (isSignedIn) {\n      this.setState({ isSignin: true });\n      // check is there any valid link or not\n      const link = document.getElementById('search-input').value;\n      this.handleSubmit(link);\n      // if valid link, this will be save with state data.\n      if (this.state.video) {\n        this.getCaptionList(this.state.video.id);\n      }\n    } else {\n      this.setState({ isSignin: false });\n    }\n  }\n\n  // 추후에 메세지 타입 만들어서 이용하거나, component 분리하면 더 좋겠다.\n  // 경고 메세지.\n  setWarning(msg) {\n    const timeOut = 5000;\n    this.setState({ warningMsg: msg });\n    console.log('warning message : ', msg);\n    setTimeout(() => {\n      this.setState({ warningMsg: '' });\n    }, timeOut);\n  }\n  // 에러 메세지\n  setError(msg) {\n    const timeOut = 4000;\n    this.setState({ errorMsg: msg });\n    console.log(msg);\n    setTimeout(() => {\n      this.setState({ errorMsg: '' });\n    }, timeOut);\n  }\n  // 정보 메세지\n  setInfo(msg) {\n    const timeOut = 6000;\n    this.setState({ infoMsg: msg });\n    console.log(msg);\n    setTimeout(() => {\n      this.setState({ infoMsg: '' });\n    }, timeOut);\n  }\n\n  handleCaption(eventArr) {\n    // add callback function\n    this.getCaptionList = eventArr[0];\n    this.setVideoTime = eventArr[1];\n    this.resetCaption = eventArr[2];\n  }\n\n  /** this function called when youtube player is ready */\n  onReady(e) {\n    // set player\n    const player = e.target;\n    this.setState({ player: player });\n\n    // check is this mobile or not\n    if (isMobile) return;\n    if (this.state.video.lastTime) {\n      player.seekTo(this.state.video.lastTime);\n      player.pauseVideo();\n    }\n    // end loading bar\n  }\n\n  /** when player play\n   * start tick(getVideoTime) by every each offset ms.\n   *\n   * 플레이어가 시작될 때 매 offset ms마다 getVideoTime을 호출한다.\n   */\n  onPlay(e) {\n    this.setTimer();\n  }\n\n  onEnd(e) {\n    this.offTimer();\n  }\n\n  /** when video pause this function called\n   * and remove tick(getVideoTime)\n   *\n   * 플레이어가 일시정지될 때 이 함수가 호출되고 getVideoTime을 더 이상 호출하지 않는다.\n   * 이렇기 때문에 일시정지한 상태에서는 자막이 바뀌지 않아서 현재 이 상태는 이용하지 않는다.\n   */\n  onPause(e) {\n    // if timer exist, remove it\n    // this.offTimer();\n    // if (this.state.player) {\n    //   const time = this.state.player.getCurrentTime();\n    //   // set time to CaptionContainer\n    //   this.setVideoTime(time);\n    // }\n  }\n\n  /** if timer is alive, kill */\n  offTimer() {\n    if (this.state.timerId !== -1) {\n      clearInterval(this.state.timerId);\n      this.setState({ timerId: -1 });\n    }\n  }\n\n  setTimer() {\n    if (!this.state.player) return;\n    if (this.state.timerId !== -1) return;\n    const offset = 100;\n    const timerId = setInterval(\n      () => this.getVideoTime(this.state.player),\n      offset\n    );\n    this.setState({ timerId: timerId });\n  }\n  /** called on onPlay\n   * every second\n   * this function called and get player's current time\n   * then set CaptionContainer.state.time\n   *\n   * onPlay에서 호출된다.\n   * 이 함수는 플레이어의 현재 플레이 시간을 갖고와서 CaptionContainer.state.time에 해당 값을 설정한다.\n   */\n  getVideoTime(player) {\n    if (player) {\n      const time = player.getCurrentTime();\n      // set time to CaptionContainer\n      this.setVideoTime(time);\n      return time;\n    } else return -1;\n  }\n\n  render() {\n    const { isSignin, player, video } = this.state;\n\n    let warning, error, info;\n    if (this.state.warningMsg !== '')\n      warning = <WarningMsg msg={this.state.warningMsg} />;\n    if (this.state.errorMsg !== '')\n      error = <ErrorMsg msg={this.state.errorMsg} />;\n    if (this.state.infoMsg !== '') info = <InfoMsg msg={this.state.infoMsg} />;\n\n    let signinUser, signoutUser;\n    if (isSignin) signinUser = <UserContainer handleAuth={this.handleAuth} />;\n    else signoutUser = <UserContainer handleAuth={this.handleAuth} />;\n    return (\n      <div className=\"section\">\n        <div className=\"container \">\n          <Video\n            video={video}\n            onReady={this.onReady}\n            onPlay={this.onPlay}\n            onPause={this.onPause}\n            onEnd={this.onEnd}\n          />\n          <div className=\"container u-full-width\">\n            <div className=\"row\">\n              {/* 10 cols */}\n              <VideoSearch\n                isSignin={isSignin}\n                handleSubmit={this.handleSubmit}\n                video={video}\n              />\n              {signoutUser}\n            </div>\n            {/* when user sign in */}\n            <div className=\"row u-full-width user-container\">{signinUser}</div>\n          </div>\n          <CaptionContainer\n            video={this.state.video}\n            isSignIn={isSignin}\n            handleCaption={this.handleCaption}\n            player={player}\n          />\n          {error}\n          {warning}\n          {info}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VideoContainer;\n","import React from 'react';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCode } from '@fortawesome/free-solid-svg-icons';\n\nconst Footer = () => {\n  return (\n    <footer className=\"footer\">\n      copyright 2020 dw\n      <a className=\"icon\" href=\"#\" target=\"_blank\">\n        <FontAwesomeIcon icon={faCode} />\n      </a>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport './App.css';\nimport '../node_modules/skeleton-css/css/skeleton.css';\nimport '../node_modules/skeleton-css/css/normalize.css';\n\nimport Title from './components/Title';\nimport VideoContainer from './components/video/VideoContainer';\nimport Footer from './components/Footer';\n\nfunction App() {\n  const title = 'Youtube-caption-customizer';\n\n  return (\n    <div className=\"app-container\">\n      <Title title={title} />\n      <VideoContainer />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}